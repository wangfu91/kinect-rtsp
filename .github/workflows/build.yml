name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Windows build
    runs-on: windows-latest
    env:
      CARGO_TERM_COLOR: always
      GST_VERSION: 1.26.5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry + build artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Cache GStreamer
        id: gst-cache
        uses: actions/cache@v4
        with:
          path: C:\gstreamer\1.0
          key: ${{ runner.os }}-gstreamer-${{ env.GST_VERSION }}

      - name: Install / Setup GStreamer
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $ver  = "$env:GST_VERSION"
          $root = 'C:\gstreamer\1.0\msvc_x86_64'
          if (-not (Test-Path "$root\lib\pkgconfig\gstreamer-1.0.pc")) {
            Write-Host "GStreamer $ver not cached. Downloading runtime + devel (first run only)..."
            $base = "https://gstreamer.freedesktop.org/data/pkg/windows/$ver/msvc"
            Invoke-WebRequest "$base/gstreamer-1.0-msvc-x86_64-$ver.msi" -OutFile gst.msi -UseBasicParsing
            Invoke-WebRequest "$base/gstreamer-1.0-devel-msvc-x86_64-$ver.msi" -OutFile gst-devel.msi -UseBasicParsing
            Start-Process msiexec -ArgumentList '/i','gst.msi','/qn','/norestart' -Wait
            Start-Process msiexec -ArgumentList '/i','gst-devel.msi','/qn','/norestart' -Wait
            Write-Host "Installed GStreamer $ver"
          } else {
            Write-Host "Using cached GStreamer $ver"
          }
          echo "GSTREAMER_ROOT=$root" >> $env:GITHUB_ENV
          echo "PKG_CONFIG_PATH=$root\lib\pkgconfig" >> $env:GITHUB_ENV
          echo "PATH=$root\bin;$env:PATH" >> $env:GITHUB_ENV

      - name: Build (release)
        run: cargo build --release --locked

      # (Optional) Add a test step here when tests are introduced
